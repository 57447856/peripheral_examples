<?xml version="1.0" encoding="UTF-8"?>
<model:MDescriptors xmlns:model="http://www.silabs.com/ss/Studio.ecore">
  <descriptors label="BRD4100A EFR32BG1P acmp" description="This project demonstrates a simple comparison of 2 inputs. PB0 is an input, which is compared with internal Vref of 2.5V. When the button is pressed output pin PA1 will be set high as the voltage input will be greater than VREF, when it is low PA1 will be low.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="acmp"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_BG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/acmp/acmp/iar/acmp.eww,../app/mcu_peripheral_examples/acmp/acmp/SimplicityStudio/BRD4100A_EFR32BG1P_acmp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P acmp" description="This project demonstrates a simple comparison of 2 inputs. PB0 is an input, which is compared with internal Vref of 2.5V. When the button is pressed output pin PA1 will be set high as the voltage input will be greater than VREF, when it is low PA1 will be low.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="acmp"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_BG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/acmp/acmp/iar/acmp.eww,../app/mcu_peripheral_examples/acmp/acmp/SimplicityStudio/BRD4103A_EFR32BG12P_acmp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P acmp" description="This project demonstrates a simple comparison of 2 inputs. PB1 is an input, which is compared with internal Vref of 2.5V. When the button is pressed output pin PA1 will be set high as the voltage input will be greater than VREF, when it is low PA1 will be low.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="acmp"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_PGMG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/acmp/acmp/iar/acmp.eww,../app/mcu_peripheral_examples/acmp/acmp/SimplicityStudio/BRD4151A_EFR32MG1P_acmp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P acmp" description="This project demonstrates a simple comparison of 2 inputs. PB1 is an input, which is compared with internal Vref of 2.5V. When the button is pressed output pin PA1 will be set high as the voltage input will be greater than VREF, when it is low PA1 will be low.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="acmp"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_PGMG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/acmp/acmp/iar/acmp.eww,../app/mcu_peripheral_examples/acmp/acmp/SimplicityStudio/BRD4161A_EFR32MG12P_acmp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P acmp" description="This project demonstrates a simple comparison of 2 inputs. PB1 is an input, which is compared with internal Vref of 2.5V. When the button is pressed output pin PA1 will be set high as the voltage input will be greater than VREF, when it is low PA1 will be low.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="acmp"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_FG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/acmp/acmp/iar/acmp.eww,../app/mcu_peripheral_examples/acmp/acmp/SimplicityStudio/BRD4250A_EFR32FG1P_acmp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P acmp" description="This project demonstrates a simple comparison of 2 inputs. PB1 is an input, which is compared with internal Vref of 2.5V. When the button is pressed output pin PA1 will be set high as the voltage input will be greater than VREF, when it is low PA1 will be low.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="acmp"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_FG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/acmp/acmp/iar/acmp.eww,../app/mcu_peripheral_examples/acmp/acmp/SimplicityStudio/BRD4253A_EFR32FG12P_acmp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B acmp" description="This project demonstrates a simple comparison of 2 inputs. PB1 is an input, which is compared with internal Vref of 2.5V. When the button is pressed output pin PA1 will be set high as the voltage input will be greater than VREF, when it is low PA1 will be low.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="acmp"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_PGMG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/acmp/acmp/iar/acmp.eww,../app/mcu_peripheral_examples/acmp/acmp/SimplicityStudio/SLSTK3401A_EFM32PG1B_acmp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B acmp" description="This project demonstrates a simple comparison of 2 inputs. PB1 is an input, which is compared with internal Vref of 2.5V. When the button is pressed output pin PA1 will be set high as the voltage input will be greater than VREF, when it is low PA1 will be low.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="acmp"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_PGMG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/acmp/acmp/iar/acmp.eww,../app/mcu_peripheral_examples/acmp/acmp/SimplicityStudio/SLSTK3402A_EFM32PG12B_acmp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to AVDD for demonstration purposes. The ADC measurement is triggered every 500ms via PRS by the RTCC peripheral. Once the scan finishes, the ADC interrupt wakes the device up from EM2 in order to output the results to the VCOM port via USART.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/BRD4100A_EFR32BG1P_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to AVDD for demonstration purposes. The ADC measurement is triggered every 500ms via PRS by the RTCC peripheral. Once the scan finishes, the ADC interrupt wakes the device up from EM2 in order to output the results to the VCOM port via USART.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/BRD4103A_EFR32BG12P_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to AVDD for demonstration purposes. The ADC measurement is triggered every 500ms via PRS by the RTCC peripheral. Once the scan finishes, the ADC interrupt wakes the device up from EM2 in order to output the results to the VCOM port via USART.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/BRD4151A_EFR32MG1P_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to AVDD for demonstration purposes. The ADC measurement is triggered every 500ms via PRS by the RTCC peripheral. Once the scan finishes, the ADC interrupt wakes the device up from EM2 in order to output the results to the VCOM port via USART.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/BRD4161A_EFR32MG12P_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to AVDD for demonstration purposes. The ADC measurement is triggered every 500ms via PRS by the RTCC peripheral. Once the scan finishes, the ADC interrupt wakes the device up from EM2 in order to output the results to the VCOM port via USART.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/BRD4250A_EFR32FG1P_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to AVDD for demonstration purposes. The ADC measurement is triggered every 500ms via PRS by the RTCC peripheral. Once the scan finishes, the ADC interrupt wakes the device up from EM2 in order to output the results to the VCOM port via USART.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/BRD4253A_EFR32FG12P_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to an unexposed pin for demonstration purposes. The device is woken up from EM2 sleep every 500ms by the RTC peripheral to take two ADC measurements and output the results to the VCOM port via USART.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0_USART.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/SLSTK3400A_EFM32HG_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to AVDD for demonstration purposes. The ADC measurement is triggered every 500ms via PRS by the RTCC peripheral. Once the scan finishes, the ADC interrupt wakes the device up from EM2 in order to output the results to the VCOM port via USART.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to AVDD for demonstration purposes. The ADC measurement is triggered every 500ms via PRS by the RTCC peripheral. Once the scan finishes, the ADC interrupt wakes the device up from EM2 in order to output the results to the VCOM port via USART.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to an unexposed pin for demonstration purposes. The device is woken up from EM2 sleep every 500ms by the RTC peripheral to take two ADC measurements and output the results to the VCOM port via LEUART.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0_LEUART.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/STK3200_EFM32ZG_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to an unexposed pin for demonstration purposes. The device is woken up from EM2 sleep every 500ms by the RTC peripheral to take two ADC measurements and output the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0_UART.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/STK3600_EFM32LG_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to an unexposed pin for demonstration purposes. The device is woken up from EM2 sleep every 500ms by the RTC peripheral to take two ADC measurements and output the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0_UART.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/STK3700_EFM32GG_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG adc scan rtc" description="This project demonstrates the ADC0 peripheral used in scanning mode with multiple single-ended inputs to take measurements automatically without CPU intervention. One of the inputs corresponds to an EXP header pin and the other is routed to an unexposed pin for demonstration purposes. The device is woken up from EM2 sleep every 500ms by the RTC peripheral to take two ADC measurements and output the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0_UART.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_scan_rtc/iar/adc_scan_rtc.eww,../app/mcu_peripheral_examples/adc/adc_scan_rtc/SimplicityStudio/STK3800_EFM32WG_adc_scan_rtc.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/STK3200_EFM32ZG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/STK3600_EFM32LG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/STK3700_EFM32GG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG adc single interrupt" description="This project demonstrates ADC0 peripheral used with a single-ended input to take nonblocking measurements, and outputs the results to the VCOM port via UART.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="adc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_Series0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/adc/adc_single_interrupt/iar/adc_single_interrupt.eww,../app/mcu_peripheral_examples/adc/adc_single_interrupt/SimplicityStudio/STK3800_EFM32WG_adc_single_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P dsp lib fft" description="This example is compatible with all boards using cortex M4 cores. This includes Pearl, Blue, Flex, Mighty, and Giant 11 Gecko boards.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="core"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/core/dsp_lib_fft/iar/dsp_lib_fft.eww,../app/mcu_peripheral_examples/core/dsp_lib_fft/SimplicityStudio/BRD4100A_EFR32BG1P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P dsp lib fft" description="This example is compatible with all boards using cortex M4 cores. This includes Pearl, Blue, Flex, Mighty, and Giant 11 Gecko boards.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="core"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/core/dsp_lib_fft/iar/dsp_lib_fft.eww,../app/mcu_peripheral_examples/core/dsp_lib_fft/SimplicityStudio/BRD4103A_EFR32BG12P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P dsp lib fft" description="This example is compatible with all boards using cortex M4 cores. This includes Pearl, Blue, Flex, Mighty, and Giant 11 Gecko boards.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="core"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/core/dsp_lib_fft/iar/dsp_lib_fft.eww,../app/mcu_peripheral_examples/core/dsp_lib_fft/SimplicityStudio/BRD4151A_EFR32MG1P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P dsp lib fft" description="This example is compatible with all boards using cortex M4 cores. This includes Pearl, Blue, Flex, Mighty, and Giant 11 Gecko boards.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="core"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/core/dsp_lib_fft/iar/dsp_lib_fft.eww,../app/mcu_peripheral_examples/core/dsp_lib_fft/SimplicityStudio/BRD4161A_EFR32MG12P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P dsp lib fft" description="This example is compatible with all boards using cortex M4 cores. This includes Pearl, Blue, Flex, Mighty, and Giant 11 Gecko boards.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="core"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/core/dsp_lib_fft/iar/dsp_lib_fft.eww,../app/mcu_peripheral_examples/core/dsp_lib_fft/SimplicityStudio/BRD4250A_EFR32FG1P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P dsp lib fft" description="This example is compatible with all boards using cortex M4 cores. This includes Pearl, Blue, Flex, Mighty, and Giant 11 Gecko boards.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="core"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/core/dsp_lib_fft/iar/dsp_lib_fft.eww,../app/mcu_peripheral_examples/core/dsp_lib_fft/SimplicityStudio/BRD4253A_EFR32FG12P_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B dsp lib fft" description="This example is compatible with all boards using cortex M4 cores. This includes Pearl, Blue, Flex, Mighty, and Giant 11 Gecko boards.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="core"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/core/dsp_lib_fft/iar/dsp_lib_fft.eww,../app/mcu_peripheral_examples/core/dsp_lib_fft/SimplicityStudio/SLSTK3401A_EFM32PG1B_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B dsp lib fft" description="This example is compatible with all boards using cortex M4 cores. This includes Pearl, Blue, Flex, Mighty, and Giant 11 Gecko boards.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="core"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/core/dsp_lib_fft/iar/dsp_lib_fft.eww,../app/mcu_peripheral_examples/core/dsp_lib_fft/SimplicityStudio/SLSTK3402A_EFM32PG12B_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3701A EFM32GG11B dsp lib fft" description="This example is compatible with all boards using cortex M4 cores. This includes Pearl, Blue, Flex, Mighty, and Giant 11 Gecko boards.">
    <properties key="core.boardCompatibility" value="brd2204a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg11.*"/>
    <properties key="template.category" value="core"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/core/dsp_lib_fft/iar/dsp_lib_fft.eww,../app/mcu_peripheral_examples/core/dsp_lib_fft/SimplicityStudio/SLSTK3701A_EFM32GG11B_dsp_lib_fft.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A cryotimer lfxo em4 no ret" description="This project demonstrates use of the CRYOTIMER with the low frequency crystal oscillator (LFXO) as its clock in EM4 without GPIO retention.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_lfxo_em4_no_ret/SimplicityStudio/SLSTK3402A_cryotimer_lfxo_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P cryotimer ulfrco em123" description="This project demonstrates use of the CRYOTIMER with the ultra-low frequency RC oscillator (ULFRCO) as its clock in EM3.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/iar/cryotimer_ulfrco_em123.eww,../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4100A_EFR32BG1P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P cryotimer ulfrco em123" description="This project demonstrates use of the CRYOTIMER with the ultra-low frequency RC oscillator (ULFRCO) as its clock in EM3.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/iar/cryotimer_ulfrco_em123.eww,../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4103A_EFR32BG12P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P cryotimer ulfrco em123" description="This project demonstrates use of the CRYOTIMER with the ultra-low frequency RC oscillator (ULFRCO) as its clock in EM3.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/iar/cryotimer_ulfrco_em123.eww,../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4151A_EFR32MG1P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P cryotimer ulfrco em123" description="This project demonstrates use of the CRYOTIMER with the ultra-low frequency RC oscillator (ULFRCO) as its clock in EM3.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/iar/cryotimer_ulfrco_em123.eww,../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4161A_EFR32MG12P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P cryotimer ulfrco em123" description="This project demonstrates use of the CRYOTIMER with the ultra-low frequency RC oscillator (ULFRCO) as its clock in EM3.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/iar/cryotimer_ulfrco_em123.eww,../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4250A_EFR32FG1P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P cryotimer ulfrco em123" description="This project demonstrates use of the CRYOTIMER with the ultra-low frequency RC oscillator (ULFRCO) as its clock in EM3.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/iar/cryotimer_ulfrco_em123.eww,../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/BRD4253A_EFR32FG12P_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B cryotimer ulfrco em123" description="This project demonstrates use of the CRYOTIMER with the ultra-low frequency RC oscillator (ULFRCO) as its clock in EM3.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/iar/cryotimer_ulfrco_em123.eww,../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/SLSTK3401A_EFM32PG1B_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B cryotimer ulfrco em123" description="This project demonstrates use of the CRYOTIMER with the ultra-low frequency RC oscillator (ULFRCO) as its clock in EM3.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/iar/cryotimer_ulfrco_em123.eww,../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em123/SimplicityStudio/SLSTK3402A_EFM32PG12B_cryotimer_ulfrco_em123.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A cryotimer ulfrco em4 no ret" description="This project demonstrates use of the CRYOTIMER with the ultra-low frequency RC oscillator (ULFRCO) as its clock in EM4 without GPIO retention.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="cryotimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/cryotimer/cryotimer_ulfrco_em4_no_ret/SimplicityStudio/SLSTK3402A_cryotimer_ulfrco_em4_no_ret.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG dac voltage" description="This project uses the DAC in continuous mode to output 0.5V to a pin in EM1.  The DAC operates independently from the core. Since the DAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="dac"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/dac/dac_voltage/iar/dac_voltage.eww,../app/mcu_peripheral_examples/dac/dac_voltage/SimplicityStudio/STK3600_EFM32LG_dac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG dac voltage" description="This project uses the DAC in continuous mode to output 0.5V to a pin in EM1.  The DAC operates independently from the core. Since the DAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="dac"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/dac/dac_voltage/iar/dac_voltage.eww,../app/mcu_peripheral_examples/dac/dac_voltage/SimplicityStudio/STK3700_EFM32GG_dac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG dac voltage" description="This project uses the DAC in continuous mode to output 0.5V to a pin in EM1.  The DAC operates independently from the core. Since the DAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="dac"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/dac/dac_voltage/iar/dac_voltage.eww,../app/mcu_peripheral_examples/dac/dac_voltage/SimplicityStudio/STK3800_EFM32WG_dac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G dac voltage" description="This project uses the DAC in continuous mode to output 0.5V to a pin in EM1.  The DAC operates independently from the core. Since the DAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="dac"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/dac/dac_voltage/iar/dac_voltage.eww,../app/mcu_peripheral_examples/dac/dac_voltage/SimplicityStudio/STKXXX_EFM32G_dac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/BRD4100A_EFR32BG1P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/BRD4103A_EFR32BG12P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/BRD4151A_EFR32MG1P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/BRD4161A_EFR32MG12P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/BRD4250A_EFR32FG1P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/BRD4253A_EFR32FG12P_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/SLSTK3400A_EFM32HG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/SLSTK3401A_EFM32PG1B_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/SLSTK3402A_EFM32PG12B_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/STK3200_EFM32ZG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/STK3600_EFM32LG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/STK3700_EFM32GG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/STK3800_EFM32WG_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G EM4 WakeUp" description="For Pearl Gecko 1, Pearl Gecko 12, Zero Gecko, and all EFR32 kits: This project demonstrates the ability for a pin to wake the device from EM4. Under a normal, non-EM4 reset, the device will enter EM4. Pressing PB1 will wake the device from EM4 and cause the LEDs on the STK to toggle indefinitely.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/EM4_WakeUp/iar/EM4_WakeUp.eww,../app/mcu_peripheral_examples/gpio/EM4_WakeUp/SimplicityStudio/STKXXX_EFM32G_EM4_WakeUp.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/STK3200_EFM32ZG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/STK3600_EFM32LG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/STK3700_EFM32GG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/STK3800_EFM32WG_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G switch led interrupt" description="This project demonstrates a using GPIOs to trigger external interrupts. If a push-button is pressed, and it is on an odd pin, the odd GPIO interrupt is triggered, which toggles LED1. If the pin is on an even pin, the even GPIO interrupt is triggered, which toggles LED0.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_interrupt/iar/switch_led_interrupt.eww,../app/mcu_peripheral_examples/gpio/switch_led_interrupt/SimplicityStudio/STKXXX_EFM32G_switch_led_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/BRD4100A_EFR32BG1P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/BRD4103A_EFR32BG12P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/BRD4151A_EFR32MG1P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/BRD4161A_EFR32MG12P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/BRD4250A_EFR32FG1P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/BRD4253A_EFR32FG12P_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/SLSTK3400A_EFM32HG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/STK3200_EFM32ZG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/STK3600_EFM32LG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/STK3700_EFM32GG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/STK3800_EFM32WG_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G switch led polled" description="This project demonstrates a simple polled-mode use of the device's GPIOs. Pushbuttons 0 and 1 are constantly polled. If pressed, LED0 and LED1,  respectively, are turned on.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="gpio"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/gpio/switch_led_polled/iar/switch_led_polled.eww,../app/mcu_peripheral_examples/gpio/switch_led_polled/SimplicityStudio/STKXXX_EFM32G_switch_led_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_BGFG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/BRD4100A_EFR32BG1P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_BGFG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/BRD4103A_EFR32BG12P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_MG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/BRD4151A_EFR32MG1P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_MG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/BRD4161A_EFR32MG12P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_BGFG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/BRD4250A_EFR32FG1P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_BGFG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/BRD4253A_EFR32FG12P_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). This readme is for the Zero Gecko and Happy Gecko boards, the Happy Gecko uses the odd GPIO interrupt handler and the Zero  Gecko uses the even.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_ZGHG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/SLSTK3400A_EFM32HG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_PG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/SLSTK3401A_EFM32PG1B_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_PG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/SLSTK3402A_EFM32PG12B_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode). This readme is for the Zero Gecko and Happy Gecko boards, the Happy Gecko uses the odd GPIO interrupt handler and the Zero  Gecko uses the even.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_ZGHG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/STK3200_EFM32ZG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_GGLGWG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/STK3600_EFM32LG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_GGLGWG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/STK3700_EFM32GG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_GGLGWG.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/STK3800_EFM32WG_i2c.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G i2c" description="This project demonstrates both master and slave configurations of the  EFM32 I2C peripheral. Two EFM32 starter kits are connected via a single I2C bus, and each EFM32 I2C peripheral is setup to both transmit (master mode) and receive (slave mode).">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="i2c"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/i2c/i2c/iar/i2c.eww,../app/mcu_peripheral_examples/i2c/i2c/SimplicityStudio/STKXXX_EFM32G_i2c.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B one shot output compare" description="This project demonstrates output compare in EM2 using the LETIMER. The project initializes the timer in one-shot mode, and after one second, while staying in  a low energy mode, will set GPIO pin PC10 (Expansion Header Pin 16).">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="letimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/letimer/one_shot_output_compare/iar/one_shot_output_compare.eww,../app/mcu_peripheral_examples/letimer/one_shot_output_compare/SimplicityStudio/SLSTK3402A_EFM32PG12B_one_shot_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B pulse train" description="This project demonstrates pulse train generation using the LETIMER. The project initializes the timer in free mode, and creates a one LFCLK length pulse on  each underflow event. The underflow occurs at 1 kHz frequency.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="letimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/letimer/pulse_train/iar/pulse_train.eww,../app/mcu_peripheral_examples/letimer/pulse_train/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_train.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B pulse width modulation" description="This project demonstrates pulse width modulation using the LETIMER. The  project initializes the timer for PWM with a set 30 percent duty cycle at 1 kHz frequency. The waveform is output on GPIO pin PC10 (Expansion Header Pin 16).">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="letimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/letimer/pulse_width_modulation/iar/pulse_width_modulation.eww,../app/mcu_peripheral_examples/letimer/pulse_width_modulation/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_width_modulation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12 leuart echo" description="This example loops back the leuart uart using interrupts. It waits in EM2 ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="leuart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/leuart/leuart_echo/iar/leuart_echo.eww,../app/mcu_peripheral_examples/leuart/leuart_echo/SimplicityStudio/BRD4103A_EFR32BG12_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12 leuart echo" description="This example loops back the leuart uart using interrupts. It waits in EM2 ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="leuart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/leuart/leuart_echo/iar/leuart_echo.eww,../app/mcu_peripheral_examples/leuart/leuart_echo/SimplicityStudio/BRD4161A_EFR32MG12_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12 leuart echo" description="This example loops back the leuart uart using interrupts. It waits in EM2 ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="leuart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/leuart/leuart_echo/iar/leuart_echo.eww,../app/mcu_peripheral_examples/leuart/leuart_echo/SimplicityStudio/BRD4253A_EFR32FG12_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12 leuart echo" description="This example loops back the leuart uart using interrupts. It waits in EM2 ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="leuart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/leuart/leuart_echo/iar/leuart_echo.eww,../app/mcu_peripheral_examples/leuart/leuart_echo/SimplicityStudio/SLSTK3402A_EFM32PG12_leuart_echo.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_SYSRESETREQ.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/BRD4100A_EFR32BG1P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_SYSRESETREQ.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/BRD4103A_EFR32BG12P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_SYSRESETREQ.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/BRD4151A_EFR32MG1P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_SYSRESETREQ.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/BRD4161A_EFR32MG12P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_SYSRESETREQ.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/BRD4250A_EFR32FG1P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_SYSRESETREQ.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/BRD4253A_EFR32FG12P_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_RESETn.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/SLSTK3400A_EFM32HG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_SYSRESETREQ.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/SLSTK3401A_EFM32PG1B_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_SYSRESETREQ.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/SLSTK3402A_EFM32PG12B_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_RESETn.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/STK3200_EFM32ZG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_RESETn.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/STK3600_EFM32LG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_RESETn.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/STK3700_EFM32GG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_RESETn.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/STK3800_EFM32WG_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G debug lock" description="This project demonstrates the device's ability to lock the debug interface by clearing bits in the lock bits page. The lower four bits in the Debug Lock Word are cleared. After a device reset, no debugging can be done until a device mass erase is completed,  unlocking the device.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_RESETn.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/debug_lock/iar/debug_lock.eww,../app/mcu_peripheral_examples/msc/debug_lock/SimplicityStudio/STKXXX_EFM32G_debug_lock.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/BRD4100A_EFR32BG1P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/BRD4103A_EFR32BG12P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/BRD4151A_EFR32MG1P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/BRD4161A_EFR32MG12P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/BRD4250A_EFR32FG1P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/BRD4253A_EFR32FG12P_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/SLSTK3400A_EFM32HG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/SLSTK3401A_EFM32PG1B_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/SLSTK3402A_EFM32PG12B_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/STK3200_EFM32ZG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/STK3600_EFM32LG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/STK3700_EFM32GG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/STK3800_EFM32WG_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G msc rw" description=" This project demonstrates the use of the userdata page of the  flash memory. The value 32 is stored in the 4th byte of the page. A  variable is set to the value stored at this location, which can then  be read in the debugger">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="msc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/msc/msc_rw/iar/msc_rw.eww,../app/mcu_peripheral_examples/msc/msc_rw/SimplicityStudio/STKXXX_EFM32G_msc_rw.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12 template project" description="This project demonstrates the basic functionality of the Pulse Counter  (PCNT) peripheral as well as the pulse width filter. The counter will generate an interrupt that will toggle LED0 after BTN0 is pressed 3  times (3 pulses). ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="pcnt"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/pcnt/simple_pulse/iar/template_project.eww,../app/mcu_peripheral_examples/pcnt/simple_pulse/SimplicityStudio/SLSTK3402A_EFM32PG12_simple_pulse.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P rmu" description="This readme applies for main_CRYO which is used with Pearl Gecko, Blue Gecko, Flex Gecko, and Mighty Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_CRYO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/BRD4100A_EFR32BG1P_rmu.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P rmu" description="This readme applies for main_CRYO which is used with Pearl Gecko, Blue Gecko, Flex Gecko, and Mighty Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_CRYO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/BRD4103A_EFR32BG12P_rmu.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P rmu" description="This readme applies for main_CRYO which is used with Pearl Gecko, Blue Gecko, Flex Gecko, and Mighty Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_CRYO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/BRD4151A_EFR32MG1P_rmu.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P rmu" description="This readme applies for main_CRYO which is used with Pearl Gecko, Blue Gecko, Flex Gecko, and Mighty Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_CRYO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/BRD4161A_EFR32MG12P_rmu.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P rmu" description="This readme applies for main_CRYO which is used with Pearl Gecko, Blue Gecko, Flex Gecko, and Mighty Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_CRYO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/BRD4250A_EFR32FG1P_rmu.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P rmu" description="This readme applies for main_CRYO which is used with Pearl Gecko, Blue Gecko, Flex Gecko, and Mighty Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_CRYO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/BRD4253A_EFR32FG12P_rmu.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG rmu" description="This readme applies for main_GPIO which is used with Zero Gecko and Happy Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_GPIO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/SLSTK3400A_EFM32HG_rmu.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B rmu" description="This readme applies for main_CRYO which is used with Pearl Gecko, Blue Gecko, Flex Gecko, and Mighty Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_CRYO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/SLSTK3401A_EFM32PG1B_rmu.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B rmu" description="This readme applies for main_CRYO which is used with Pearl Gecko, Blue Gecko, Flex Gecko, and Mighty Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_CRYO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/SLSTK3402A_EFM32PG12B_rmu.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG rmu" description="This readme applies for main_GPIO which is used with Zero Gecko and Happy Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_GPIO.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/STK3200_EFM32ZG_rmu.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG rmu" description="This readme applies for main_BURTC which is used with Giant Gecko, Wonder Gecko, and Leopard Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_BURTC.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/STK3600_EFM32LG_rmu.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG rmu" description="This readme applies for main_BURTC which is used with Giant Gecko, Wonder Gecko, and Leopard Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_BURTC.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/STK3700_EFM32GG_rmu.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG rmu" description="This readme applies for main_BURTC which is used with Giant Gecko, Wonder Gecko, and Leopard Gecko kits. This project demonstrates four different reset sources - POR, EM4, Pin Reset  and System Reset Request. GPIO Push Buttons (PB0 &amp; PB1) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_BURTC.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/STK3800_EFM32WG_rmu.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G rmu" description="This readme applies for main_G8xx which is used with Gecko kits. This project demonstrates three different reset sources - POR, Pin Reset  and System Reset Request. GPIO Push Button (PB0) and LEDs (LED0 &amp; LED1)  are used in initiate and indicate different resets respectively. A specific  pattern of LEDs indicates a specific reset source. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu/iar/rmu.eww,../app/mcu_peripheral_examples/rmu/rmu/SimplicityStudio/STKXXX_EFM32G_rmu.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P rmu extended" description="This project showcases the Extended reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the extended reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_extended/iar/rmu_extended.eww,../app/mcu_peripheral_examples/rmu/rmu_extended/SimplicityStudio/BRD4100A_EFR32BG1P_rmu_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P rmu extended" description="This project showcases the Extended reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the extended reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_extended/iar/rmu_extended.eww,../app/mcu_peripheral_examples/rmu/rmu_extended/SimplicityStudio/BRD4103A_EFR32BG12P_rmu_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P rmu extended" description="This project showcases the Extended reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the extended reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_extended/iar/rmu_extended.eww,../app/mcu_peripheral_examples/rmu/rmu_extended/SimplicityStudio/BRD4151A_EFR32MG1P_rmu_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P rmu extended" description="This project showcases the Extended reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the extended reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_extended/iar/rmu_extended.eww,../app/mcu_peripheral_examples/rmu/rmu_extended/SimplicityStudio/BRD4161A_EFR32MG12P_rmu_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P rmu extended" description="This project showcases the Extended reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the extended reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_extended/iar/rmu_extended.eww,../app/mcu_peripheral_examples/rmu/rmu_extended/SimplicityStudio/BRD4250A_EFR32FG1P_rmu_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P rmu extended" description="This project showcases the Extended reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the extended reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_extended/iar/rmu_extended.eww,../app/mcu_peripheral_examples/rmu/rmu_extended/SimplicityStudio/BRD4253A_EFR32FG12P_rmu_extended.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B rmu extended" description="This project showcases the Extended reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the extended reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_extended/iar/rmu_extended.eww,../app/mcu_peripheral_examples/rmu/rmu_extended/SimplicityStudio/SLSTK3401A_EFM32PG1B_rmu_extended.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B rmu extended" description="This project showcases the Extended reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the extended reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_extended/iar/rmu_extended.eww,../app/mcu_peripheral_examples/rmu/rmu_extended/SimplicityStudio/SLSTK3402A_EFM32PG12B_rmu_extended.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A rmu extended" description="This project showcases the Extended reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the extended reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger and parts of CMU, RMU and EMU. This example demonstrates the  extended reset capability using pin reset and cryotimer. USART0 is connected to the board controller, which enumerates as a VCOM port when connected to a PC. This displays the Cryotimer counts on any  terminal program. It can be seen here that despite the pin reset, the value of the cryotimer remains unchanged. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_extended/iar/rmu_extended.eww,../app/mcu_peripheral_examples/rmu/rmu_extended/SimplicityStudio/SLSTK3402A_rmu_extended.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P rmu limited" description="This project showcases the Limited Reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the Limited Reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates  the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_limited/iar/rmu_limited.eww,../app/mcu_peripheral_examples/rmu/rmu_limited/SimplicityStudio/BRD4100A_EFR32BG1P_rmu_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P rmu limited" description="This project showcases the Limited Reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the Limited Reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates  the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_limited/iar/rmu_limited.eww,../app/mcu_peripheral_examples/rmu/rmu_limited/SimplicityStudio/BRD4103A_EFR32BG12P_rmu_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P rmu limited" description="This project showcases the Limited Reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the Limited Reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates  the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_limited/iar/rmu_limited.eww,../app/mcu_peripheral_examples/rmu/rmu_limited/SimplicityStudio/BRD4151A_EFR32MG1P_rmu_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P rmu limited" description="This project showcases the Limited Reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the Limited Reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates  the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_limited/iar/rmu_limited.eww,../app/mcu_peripheral_examples/rmu/rmu_limited/SimplicityStudio/BRD4161A_EFR32MG12P_rmu_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P rmu limited" description="This project showcases the Limited Reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the Limited Reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates  the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_limited/iar/rmu_limited.eww,../app/mcu_peripheral_examples/rmu/rmu_limited/SimplicityStudio/BRD4250A_EFR32FG1P_rmu_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P rmu limited" description="This project showcases the Limited Reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the Limited Reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates  the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_limited/iar/rmu_limited.eww,../app/mcu_peripheral_examples/rmu/rmu_limited/SimplicityStudio/BRD4253A_EFR32FG12P_rmu_limited.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B rmu limited" description="This project showcases the Limited Reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the Limited Reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates  the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_limited/iar/rmu_limited.eww,../app/mcu_peripheral_examples/rmu/rmu_limited/SimplicityStudio/SLSTK3401A_EFM32PG1B_rmu_limited.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B rmu limited" description="This project showcases the Limited Reset capability of the Pearl Gecko,  Blue Gecko, Mighty Gecko, and Flex Gecko kits. In the Limited Reset mode,  after a soft reset, everything is reset with the exception of Cryotimer,  Debugger, RTCC, VMON and parts of CMU, RMU and EMU. This example demonstrates  the Limited Reset capability using watchdog reset and RTCC.  USART0 is to connected the board controller, which enumerates as a VCOM port when connected to a PC. This displays the RTCC counts on any serial terminal program. It can be seen here that despite the wdog reset, the value of the RTCC remains unchanged.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="rmu"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rmu/rmu_limited/iar/rmu_limited.eww,../app/mcu_peripheral_examples/rmu/rmu_limited/SimplicityStudio/SLSTK3402A_EFM32PG12B_rmu_limited.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P rtcc alarm set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="rtcc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/iar/rtcc_alarm_set.eww,../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4100A_EFR32BG1P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P rtcc alarm set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="rtcc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/iar/rtcc_alarm_set.eww,../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4103A_EFR32BG12P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P rtcc alarm set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="rtcc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/iar/rtcc_alarm_set.eww,../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4151A_EFR32MG1P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P rtcc alarm set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="rtcc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/iar/rtcc_alarm_set.eww,../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4161A_EFR32MG12P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P rtcc alarm set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="rtcc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/iar/rtcc_alarm_set.eww,../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4250A_EFR32FG1P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P rtcc alarm set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="rtcc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/iar/rtcc_alarm_set.eww,../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/SimplicityStudio/BRD4253A_EFR32FG12P_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B rtcc alarm set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="rtcc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/iar/rtcc_alarm_set.eww,../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/SimplicityStudio/SLSTK3401A_EFM32PG1B_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B rtcc alarm set" description="This project demonstrates the RTCC peripheral by setting an alarm. Information is sent to and from the device via the device's USART and  the STK's VCOM port. After the current date/time and the alarm date/time are set, LED1 will turn on when the alarm occurs.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="rtcc"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/iar/rtcc_alarm_set.eww,../app/mcu_peripheral_examples/rtcc/rtcc_alarm_set/SimplicityStudio/SLSTK3402A_EFM32PG12B_rtcc_alarm_set.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P DMA edge capture" description="This readme applies for Blue Gecko, Flex Gecko, Mighty Gecko, and Pearl Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/BRD4100A_EFR32BG1P_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P DMA edge capture" description="This readme applies for Blue Gecko, Flex Gecko, Mighty Gecko, and Pearl Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/BRD4103A_EFR32BG12P_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P DMA edge capture" description="This readme applies for Blue Gecko, Flex Gecko, Mighty Gecko, and Pearl Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/BRD4151A_EFR32MG1P_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P DMA edge capture" description="This readme applies for Blue Gecko, Flex Gecko, Mighty Gecko, and Pearl Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/BRD4161A_EFR32MG12P_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P DMA edge capture" description="This readme applies for Blue Gecko, Flex Gecko, Mighty Gecko, and Pearl Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/BRD4250A_EFR32FG1P_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P DMA edge capture" description="This readme applies for Blue Gecko, Flex Gecko, Mighty Gecko, and Pearl Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/BRD4253A_EFR32FG12P_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG DMA edge capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PD6 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/SLSTK3400A_EFM32HG_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B DMA edge capture" description="This readme applies for Blue Gecko, Flex Gecko, Mighty Gecko, and Pearl Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/SLSTK3401A_EFM32PG1B_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B DMA edge capture" description="This readme applies for Blue Gecko, Flex Gecko, Mighty Gecko, and Pearl Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG DMA edge capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PD6 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/STK3200_EFM32ZG_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG DMA edge capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PD6 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/STK3600_EFM32LG_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG DMA edge capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PD6 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/STK3700_EFM32GG_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG DMA edge capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PD6 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/STK3800_EFM32WG_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G DMA edge capture" description="This readme applies for the Gecko. This project demonstrates DMA driven edge capture from a TIMER Compare/Capture channel. TIMER0 CC0 is configured to capture rising and falling edges. GPIO Pin PD1 (Expansion Header Pin 6) is to be connected to a periodic signal, and  edges captured from PD1 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/timer/DMA_edge_capture/SimplicityStudio/STKXXX_EFM32G_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P frequency generation" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/BRD4100A_EFR32BG1P_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P frequency generation" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/BRD4103A_EFR32BG12P_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P frequency generation" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/BRD4151A_EFR32MG1P_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P frequency generation" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/BRD4161A_EFR32MG12P_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P frequency generation" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/BRD4250A_EFR32FG1P_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P frequency generation" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/BRD4253A_EFR32FG12P_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG frequency generation" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates frequency generation using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/SLSTK3400A_EFM32HG_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B frequency generation" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/SLSTK3401A_EFM32PG1B_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B frequency generation" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/SLSTK3402A_EFM32PG12B_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG frequency generation" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates frequency generation using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/STK3200_EFM32ZG_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG frequency generation" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates frequency generation using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/STK3600_EFM32LG_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG frequency generation" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates frequency generation using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/STK3700_EFM32GG_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG frequency generation" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates frequency generation using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/STK3800_EFM32WG_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G frequency generation" description="This readme applies for the Gecko device. This project demonstrates frequency generation using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD1 (Expansion Header Pin 6). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/timer/frequency_generation/SimplicityStudio/STKXXX_EFM32G_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/BRD4100A_EFR32BG1P_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/BRD4103A_EFR32BG12P_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/BRD4151A_EFR32MG1P_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/BRD4161A_EFR32MG12P_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/BRD4250A_EFR32FG1P_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/BRD4253A_EFR32FG12P_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/SLSTK3400A_EFM32HG_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/STK3200_EFM32ZG_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/STK3600_EFM32LG_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/STK3700_EFM32GG_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/STK3800_EFM32WG_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G input capture polled" description="This project demonstrates the use of the TIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured timer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/timer/input_capture_polled/SimplicityStudio/STKXXX_EFM32G_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P period measurement interrupt" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P period measurement interrupt" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P period measurement interrupt" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P period measurement interrupt" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P period measurement interrupt" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P period measurement interrupt" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG period measurement interrupt" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PD6 (Expansion Header Pin 16)is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B period measurement interrupt" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B period measurement interrupt" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG period measurement interrupt" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PD6 (Expansion Header Pin 16)is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/STK3200_EFM32ZG_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG period measurement interrupt" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PD6 (Expansion Header Pin 16)is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/STK3600_EFM32LG_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG period measurement interrupt" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PD6 (Expansion Header Pin 16)is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/STK3700_EFM32GG_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG period measurement interrupt" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PD6 (Expansion Header Pin 16)is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/STK3800_EFM32WG_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G period measurement interrupt" description="This readme applies for the Gecko device. This project demonstrates period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PD1 (Expansion Header Pin 6) is to be connected to a periodic signal, and edges captured from PD1 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/timer/period_measurement_interrupt/SimplicityStudio/STKXXX_EFM32G_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P period measurement polled" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates polled period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/BRD4100A_EFR32BG1P_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P period measurement polled" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates polled period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/BRD4103A_EFR32BG12P_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P period measurement polled" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates polled period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/BRD4151A_EFR32MG1P_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P period measurement polled" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates polled period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/BRD4161A_EFR32MG12P_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P period measurement polled" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates polled period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/BRD4250A_EFR32FG1P_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P period measurement polled" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates polled period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/BRD4253A_EFR32FG12P_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG period measurement polled" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates polled period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. The  program waits until an edge is available. Then the captured edge is read from CC0 and compared with the previously captured edge to calculate the period.  The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/SLSTK3400A_EFM32HG_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B period measurement polled" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates polled period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B period measurement polled" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates polled period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG period measurement polled" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates polled period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. The  program waits until an edge is available. Then the captured edge is read from CC0 and compared with the previously captured edge to calculate the period.  The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/STK3200_EFM32ZG_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG period measurement polled" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates polled period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. The  program waits until an edge is available. Then the captured edge is read from CC0 and compared with the previously captured edge to calculate the period.  The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/STK3600_EFM32LG_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG period measurement polled" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates polled period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. The  program waits until an edge is available. Then the captured edge is read from CC0 and compared with the previously captured edge to calculate the period.  The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/STK3700_EFM32GG_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG period measurement polled" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates polled period measurement using the TIMER module. TIMER1 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal, and edges captured from PD6 are stored in CC0. The  program waits until an edge is available. Then the captured edge is read from CC0 and compared with the previously captured edge to calculate the period.  The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/STK3800_EFM32WG_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G period measurement polled" description="This readme applies for the Gecko device. This project demonstrates polled period measurement using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PD1 (Expansion Header Pin 6) is to be connected to a periodic signal, and edges captured from PD1 are stored in CC0. The  program waits until an edge is available. Then the captured edge is read from CC0 and compared with the previously captured edge to calculate the period.  The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/timer/period_measurement_polled/SimplicityStudio/STKXXX_EFM32G_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P pulse capture" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. TIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/BRD4100A_EFR32BG1P_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P pulse capture" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. TIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/BRD4103A_EFR32BG12P_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P pulse capture" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. TIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/BRD4151A_EFR32MG1P_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P pulse capture" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. TIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/BRD4161A_EFR32MG12P_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P pulse capture" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. TIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/BRD4250A_EFR32FG1P_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P pulse capture" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. TIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/BRD4253A_EFR32FG12P_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG pulse capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 25 MHz oscillator, is configured to run the HFPER clock. TIMER1 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/SLSTK3400A_EFM32HG_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B pulse capture" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. TIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/SLSTK3401A_EFM32PG1B_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B pulse capture" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. TIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG pulse capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 25 MHz oscillator, is configured to run the HFPER clock. TIMER1 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/STK3200_EFM32ZG_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG pulse capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 25 MHz oscillator, is configured to run the HFPER clock. TIMER1 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/STK3600_EFM32LG_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG pulse capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 25 MHz oscillator, is configured to run the HFPER clock. TIMER1 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/STK3700_EFM32GG_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG pulse capture" description="This readme applies for Giant Gecko, Wonder Gecko Leopard Gecko, Zero Gecko, and Happy Gecko This project demonstrates single pulse capture using the TIMER module. The HFXO, a 25 MHz oscillator, is configured to run the HFPER clock. TIMER1 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PD6 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/STK3800_EFM32WG_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G pulse capture" description="This readme applies for the Gecko device. This project demonstrates single pulse capture using the TIMER module. The HFXO, a 32 MHz oscillator, is configured to run the HFPER clock. TIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PD1 (Expansion Header Pin 6) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/timer/pulse_capture/SimplicityStudio/STKXXX_EFM32G_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P pulse width modulation DMA" description="This readme applies for main_S1 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/BRD4100A_EFR32BG1P_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P pulse width modulation DMA" description="This readme applies for main_S1 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/BRD4103A_EFR32BG12P_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P pulse width modulation DMA" description="This readme applies for main_S1 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/BRD4151A_EFR32MG1P_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P pulse width modulation DMA" description="This readme applies for main_S1 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/BRD4161A_EFR32MG12P_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P pulse width modulation DMA" description="This readme applies for main_S1 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/BRD4250A_EFR32FG1P_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P pulse width modulation DMA" description="This readme applies for main_S1 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/BRD4253A_EFR32FG12P_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG pulse width modulation DMA" description="This readme applies for main_S0 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The uDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/SLSTK3400A_EFM32HG_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B pulse width modulation DMA" description="This readme applies for main_S1 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/SLSTK3401A_EFM32PG1B_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B pulse width modulation DMA" description="This readme applies for main_S1 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG pulse width modulation DMA" description="This readme applies for main_S0 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The uDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/STK3200_EFM32ZG_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG pulse width modulation DMA" description="This readme applies for main_S0 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The uDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/STK3600_EFM32LG_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG pulse width modulation DMA" description="This readme applies for main_S0 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The uDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/STK3700_EFM32GG_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG pulse width modulation DMA" description="This readme applies for main_S0 This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The uDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/STK3800_EFM32WG_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G pulse width modulation DMA" description="This readme applies for main_G8xx This project demonstrates DMA driven pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The uDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_DMA/SimplicityStudio/STKXXX_EFM32G_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P pulse width modulation interrupt" description="This readme applies for main_S1 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P pulse width modulation interrupt" description="This readme applies for main_S1 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P pulse width modulation interrupt" description="This readme applies for main_S1 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P pulse width modulation interrupt" description="This readme applies for main_S1 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P pulse width modulation interrupt" description="This readme applies for main_S1 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P pulse width modulation interrupt" description="This readme applies for main_S1 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG pulse width modulation interrupt" description="This readme applies for main_S0 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B pulse width modulation interrupt" description="This readme applies for main_S1 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B pulse width modulation interrupt" description="This readme applies for main_S1 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG pulse width modulation interrupt" description="This readme applies for main_S0 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/STK3200_EFM32ZG_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG pulse width modulation interrupt" description="This readme applies for main_S0 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/STK3600_EFM32LG_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG pulse width modulation interrupt" description="This readme applies for main_S0 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/STK3700_EFM32GG_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG pulse width modulation interrupt" description="This readme applies for main_S0 This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/STK3800_EFM32WG_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G pulse width modulation interrupt" description="This readme applies for main_G8xx This project demonstrates pulse width modulation using the TIMER module. TIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PD1 (Exp. header pin below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/timer/pulse_width_modulation_interrupt/SimplicityStudio/STKXXX_EFM32G_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/BRD4100A_EFR32BG1P_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/BRD4103A_EFR32BG12P_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/BRD4151A_EFR32MG1P_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/BRD4161A_EFR32MG12P_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/BRD4250A_EFR32FG1P_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/BRD4253A_EFR32FG12P_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/SLSTK3400A_EFM32HG_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/SLSTK3401A_EFM32PG1B_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/STK3200_EFM32ZG_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/STK3600_EFM32LG_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/STK3700_EFM32GG_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/STK3800_EFM32WG_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G single edge capture" description="This project demonstrates single edge input capture using the TIMER module. TIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/timer/single_edge_capture/SimplicityStudio/STKXXX_EFM32G_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P single edge output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single output compare using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/BRD4100A_EFR32BG1P_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P single edge output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single output compare using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/BRD4103A_EFR32BG12P_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P single edge output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single output compare using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/BRD4151A_EFR32MG1P_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P single edge output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single output compare using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/BRD4161A_EFR32MG12P_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P single edge output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single output compare using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/BRD4250A_EFR32FG1P_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P single edge output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single output compare using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/BRD4253A_EFR32FG12P_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG single edge output compare" description="This readme applies for Giant Gecko, Leopard Gecko and Happy Gecko This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PD6 will be set high.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/SLSTK3400A_EFM32HG_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B single edge output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single output compare using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/SLSTK3401A_EFM32PG1B_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single edge output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates single output compare using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG single edge output compare" description="This readme applies for Giant Gecko, Leopard Gecko and Happy Gecko This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PD6 will be set high.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/STK3200_EFM32ZG_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG single edge output compare" description="This readme applies for Giant Gecko, Leopard Gecko and Happy Gecko This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PD6 will be set high.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/STK3600_EFM32LG_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG single edge output compare" description="This readme applies for Giant Gecko, Leopard Gecko and Happy Gecko This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PD6 will be set high.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/STK3700_EFM32GG_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG single edge output compare" description="This readme applies for Giant Gecko, Leopard Gecko and Happy Gecko This project demonstrates single output compare using the TIMER module. TIMER1 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD6 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PD6 will be set high.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S0.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/STK3800_EFM32WG_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G single edge output compare" description="This readme applies for Gecko This project demonstrates single output compare using the TIMER module. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PD1 (Expansion Header Pin 6). The Compare value is set such that after 3 seconds, PD1 will be set high.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_G8xx.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/timer/single_edge_output_compare/SimplicityStudio/STKXXX_EFM32G_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/BRD4100A_EFR32BG1P_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/BRD4103A_EFR32BG12P_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/BRD4151A_EFR32MG1P_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/BRD4161A_EFR32MG12P_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/BRD4250A_EFR32FG1P_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/BRD4253A_EFR32FG12P_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/SLSTK3400A_EFM32HG_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/STK3200_EFM32ZG_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/STK3600_EFM32LG_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/STK3700_EFM32GG_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/STK3800_EFM32WG_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. TIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/timer/single_output_compare_polled/SimplicityStudio/STKXXX_EFM32G_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single pulse generation DMA" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates the generation of a single pulse using output compare and the LDMA. TIMER0 is initialized for output compare on Compare/Capture  channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The timer is configured in one-shot mode and an interrupt triggers after the first  compare to load the second, falling edge to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_pulse_generation_DMA/iar/single_pulse_generation_DMA.eww,../app/mcu_peripheral_examples/timer/single_pulse_generation_DMA/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_pulse_generation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single pulse output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates the generation of a single pulse using output compare. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The timer is  configured in one-shot mode and an interrupt triggers after the first compare to load the second, falling edge to the CCV. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_pulse_generation_interrupt/iar/single_pulse_output_compare.eww,../app/mcu_peripheral_examples/timer/single_pulse_generation_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_pulse_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single edge output compare" description="This readme applies for Blue Gecko, Flex Gecko,  Mighty Gecko, and Pearl Gecko This project demonstrates the generation of a single pulse signal using output compare. TIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The buffered  compare values are set such that a single 1 pulse is generated.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="timer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme_S1.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/timer/single_pulse_generation_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/BRD4100A_EFR32BG1P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/BRD4151A_EFR32MG1P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/BRD4250A_EFR32FG1P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/SLSTK3400A_EFM32HG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/SLSTK3401A_EFM32PG1B_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/STK3200_EFM32ZG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/STK3600_EFM32LG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/STK3700_EFM32GG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/STK3800_EFM32WG_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G async interrupt" description="This example loops back the async uart using interrupts.  ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_interrupt/iar/async_interrupt.eww,../app/mcu_peripheral_examples/usart/async_interrupt/SimplicityStudio/STKXXX_EFM32G_async_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/BRD4100A_EFR32BG1P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/BRD4103A_EFR32BG12P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/BRD4151A_EFR32MG1P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/BRD4161A_EFR32MG12P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/BRD4250A_EFR32FG1P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/BRD4253A_EFR32FG12P_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/SLSTK3400A_EFM32HG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/SLSTK3401A_EFM32PG1B_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/STK3200_EFM32ZG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/STK3600_EFM32LG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/STK3700_EFM32GG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/STK3800_EFM32WG_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G async polled" description="This example loops back the async uart using polling.  ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="usart"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/usart/async_polled/iar/async_polled.eww,../app/mcu_peripheral_examples/usart/async_polled/SimplicityStudio/STKXXX_EFM32G_async_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P vdac voltage" description="This project uses the VDAC in continuous mode to output 0.5V to a pin in EM1.  The VDAC operates independently from the core. Since the VDAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="vdac"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/vdac/vdac_voltage/iar/vdac_voltage.eww,../app/mcu_peripheral_examples/vdac/vdac_voltage/SimplicityStudio/BRD4103A_EFR32BG12P_vdac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P vdac voltage" description="This project uses the VDAC in continuous mode to output 0.5V to a pin in EM1.  The VDAC operates independently from the core. Since the VDAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="vdac"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/vdac/vdac_voltage/iar/vdac_voltage.eww,../app/mcu_peripheral_examples/vdac/vdac_voltage/SimplicityStudio/BRD4161A_EFR32MG12P_vdac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P vdac voltage" description="This project uses the VDAC in continuous mode to output 0.5V to a pin in EM1.  The VDAC operates independently from the core. Since the VDAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="vdac"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/vdac/vdac_voltage/iar/vdac_voltage.eww,../app/mcu_peripheral_examples/vdac/vdac_voltage/SimplicityStudio/BRD4253A_EFR32FG12P_vdac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B vdac voltage" description="This project uses the VDAC in continuous mode to output 0.5V to a pin in EM1.  The VDAC operates independently from the core. Since the VDAC is operating in  continuous mode, the output voltage will be stable even if the output is  loaded. The fact that the DAC is continuously working will be reflected by the  power consumption.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="vdac"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/vdac/vdac_voltage/iar/vdac_voltage.eww,../app/mcu_peripheral_examples/vdac/vdac_voltage/SimplicityStudio/SLSTK3402A_EFM32PG12B_vdac_voltage.slsproj"/>
  </descriptors>
  <descriptors label="BRD4100A EFR32BG1P wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd4100a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg1.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/BRD4100A_EFR32BG1P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/BRD4103A_EFR32BG12P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4151A EFR32MG1P wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd4151a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg1.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/BRD4151A_EFR32MG1P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/BRD4161A_EFR32MG12P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4250A EFR32FG1P wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd4250a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg1.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/BRD4250A_EFR32FG1P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/BRD4253A_EFR32FG12P_wdog.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3400A EFM32HG wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd2012a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.hg.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/SLSTK3400A_EFM32HG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3401A EFM32PG1B wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd2500a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg1.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/SLSTK3401A_EFM32PG1B_wdog.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/SLSTK3402A_EFM32PG12B_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STK3200 EFM32ZG wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd2010a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.zg.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/STK3200_EFM32ZG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STK3600 EFM32LG wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd2201a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.lg.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/STK3600_EFM32LG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STK3700 EFM32GG wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd2200a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.gg.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/STK3700_EFM32GG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STK3800 EFM32WG wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd2400a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.wg.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/STK3800_EFM32WG_wdog.slsproj"/>
  </descriptors>
  <descriptors label="STKXXX EFM32G wdog" description="This project demonstrates the functionality of the watchdog timer. It uses  LEDs and a Push-button to indicate the state of the system. If the LEDs are  flashing, the system has not undergone a reset. If the Push Button 0 is  pressed and held for some time, it will trigger a WDOG reset. The code looks for a reset source in the beginning of the execution and if WDOG is found to  be the reset source, both the LEDs are turned on and the code does not execute  any further. ">
    <properties key="core.boardCompatibility" value="brd2001a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.g.*"/>
    <properties key="template.category" value="wdog"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wdog/wdog/iar/wdog.eww,../app/mcu_peripheral_examples/wdog/wdog/SimplicityStudio/STKXXX_EFM32G_wdog.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P DMA edge capture" description="This project demonstrates DMA driven edge capture from a WTIMER Compare/Capture channel. WTIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/wtimer/DMA_edge_capture/SimplicityStudio/BRD4103A_EFR32BG12P_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P DMA edge capture" description="This project demonstrates DMA driven edge capture from a WTIMER Compare/Capture channel. WTIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/wtimer/DMA_edge_capture/SimplicityStudio/BRD4161A_EFR32MG12P_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P DMA edge capture" description="This project demonstrates DMA driven edge capture from a WTIMER Compare/Capture channel. WTIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/wtimer/DMA_edge_capture/SimplicityStudio/BRD4253A_EFR32FG12P_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B DMA edge capture" description="This project demonstrates DMA driven edge capture from a WTIMER Compare/Capture channel. WTIMER1 CC0 is configured to capture rising and falling edges. GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal, and  edges captured from PC10 are stored in CC0. The LDMA is configured to transfer the first 512 edges to a fixed length buffer. The buffer is stored globally for possible future processing.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/DMA_edge_capture/iar/DMA_edge_capture.eww,../app/mcu_peripheral_examples/wtimer/DMA_edge_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_DMA_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P frequency generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/wtimer/frequency_generation/SimplicityStudio/BRD4103A_EFR32BG12P_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P frequency generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/wtimer/frequency_generation/SimplicityStudio/BRD4161A_EFR32MG12P_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P frequency generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/wtimer/frequency_generation/SimplicityStudio/BRD4253A_EFR32FG12P_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B frequency generation" description="This project demonstrates frequency generation using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Top value is set such that on each overflow, the output toggles at the desired frequency.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/frequency_generation/iar/frequency_generation.eww,../app/mcu_peripheral_examples/wtimer/frequency_generation/SimplicityStudio/SLSTK3402A_EFM32PG12B_frequency_generation.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P input capture polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured wtimer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/wtimer/input_capture_polled/SimplicityStudio/BRD4103A_EFR32BG12P_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P input capture polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured wtimer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/wtimer/input_capture_polled/SimplicityStudio/BRD4161A_EFR32MG12P_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P input capture polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured wtimer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/wtimer/input_capture_polled/SimplicityStudio/BRD4253A_EFR32FG12P_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B input capture polled" description="This project demonstrates the use of the WTIMER module for polled input capture. The Compare/Capture channel interrupt flag is polled until Push Button PB0 is pressed, at which point the  captured wtimer value is stored and LED0 is turned on.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/input_capture_polled/iar/input_capture_polled.eww,../app/mcu_peripheral_examples/wtimer/input_capture_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_input_capture_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P period measurement interrupt" description="This project demonstrates period measurement using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/wtimer/period_measurement_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P period measurement interrupt" description="This project demonstrates period measurement using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/wtimer/period_measurement_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P period measurement interrupt" description="This project demonstrates period measurement using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/wtimer/period_measurement_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B period measurement interrupt" description="This project demonstrates period measurement using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for falling edge  capture and interrupts. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. Upon each interrupt, the captured edge is read from CC0 and compared with the previously captured edge to calculate the period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/period_measurement_interrupt/iar/period_measurement_interrupt.eww,../app/mcu_peripheral_examples/wtimer/period_measurement_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_period_measurement_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P period measurement polled" description="This project demonstrates polled period measurement using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/wtimer/period_measurement_polled/SimplicityStudio/BRD4103A_EFR32BG12P_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P period measurement polled" description="This project demonstrates polled period measurement using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/wtimer/period_measurement_polled/SimplicityStudio/BRD4161A_EFR32MG12P_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P period measurement polled" description="This project demonstrates polled period measurement using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/wtimer/period_measurement_polled/SimplicityStudio/BRD4253A_EFR32FG12P_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B period measurement polled" description="This project demonstrates polled period measurement using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for  falling edge capture. GPIO Pin PC10 (Expansion Header Pin 16) is to be  connected to a periodic signal, and edges captured from PC10 are stored in CC0. The program waits until an edge is available. Then the captured edge is read  from CC0 and compared with the previously captured edge to calculate the  period. The measured period is stored in a global variable.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/period_measurement_polled/iar/period_measurement_polled.eww,../app/mcu_peripheral_examples/wtimer/period_measurement_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_period_measurement_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P pulse capture" description="This project demonstrates single pulse capture using the WTIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. WTIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/wtimer/pulse_capture/SimplicityStudio/BRD4103A_EFR32BG12P_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P pulse capture" description="This project demonstrates single pulse capture using the WTIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. WTIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/wtimer/pulse_capture/SimplicityStudio/BRD4161A_EFR32MG12P_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P pulse capture" description="This project demonstrates single pulse capture using the WTIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. WTIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/wtimer/pulse_capture/SimplicityStudio/BRD4253A_EFR32FG12P_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B pulse capture" description="This project demonstrates single pulse capture using the WTIMER module. The HFXO, a 40 MHz oscillator, is configured to run the HFPER clock. WTIMER0 is  then initialized for input capture on Compare/Capture channel 0 for interrupt on every second falling edge.  GPIO Pin PC10 (Expansion Header Pin 16) is to be connected to a periodic signal or pulse generator, and two falling edges are  captured and read from the CC0 register.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_capture/iar/pulse_capture.eww,../app/mcu_peripheral_examples/wtimer/pulse_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P pulse width modulation DMA" description="This project demonstrates DMA driven pulse width modulation using the WTIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_DMA/SimplicityStudio/BRD4103A_EFR32BG12P_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P pulse width modulation DMA" description="This project demonstrates DMA driven pulse width modulation using the WTIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_DMA/SimplicityStudio/BRD4161A_EFR32MG12P_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P pulse width modulation DMA" description="This project demonstrates DMA driven pulse width modulation using the WTIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_DMA/SimplicityStudio/BRD4253A_EFR32FG12P_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B pulse width modulation DMA" description="This project demonstrates DMA driven pulse width modulation using the WTIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. Header pin below). In PWM mode, overflow events set the output pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control  the duty cycle. The LDMA is set to loop through a buffer of duty cycles incrementing from 0 to 100%, and writes to the CCVB on each compare event.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_DMA/iar/pulse_width_modulation_DMA.eww,../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_DMA/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_width_modulation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P pulse width modulation interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P pulse width modulation interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P pulse width modulation interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B pulse width modulation interrupt" description="This project demonstrates pulse width modulation using the WTIMER module. WTIMER0 is initialized for PWM on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Exp. header pin outs below). In PWM mode, overflow events set the output  pin, while compare events clear the pin. Thus the overflow value is set to output the desired signal frequency, while the CCV is set to control the duty cycle. The duty cycle is altered by writing to the CCVB register, which safely  updates the compare value on the next overflow event.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_interrupt/iar/pulse_width_modulation_interrupt.eww,../app/mcu_peripheral_examples/wtimer/pulse_width_modulation_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_pulse_width_modulation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P single edge capture" description="This project demonstrates single edge input capture using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/wtimer/single_edge_capture/SimplicityStudio/BRD4103A_EFR32BG12P_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P single edge capture" description="This project demonstrates single edge input capture using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/wtimer/single_edge_capture/SimplicityStudio/BRD4161A_EFR32MG12P_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P single edge capture" description="This project demonstrates single edge input capture using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/wtimer/single_edge_capture/SimplicityStudio/BRD4253A_EFR32FG12P_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single edge capture" description="This project demonstrates single edge input capture using the WTIMER module. WTIMER0 is initialized for input capture on Compare/Capture channel 0 for  rising edge interrupt. Push button PB0 is configured as the source for PRS  channel 0, which routes to Compare/Capture channel 0. Upon input capture of  PB0, the event time is stored in a global variable and LED0 is toggled.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_edge_capture/iar/single_edge_capture.eww,../app/mcu_peripheral_examples/wtimer/single_edge_capture/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_edge_capture.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P single edge output compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/wtimer/single_edge_output_compare/SimplicityStudio/BRD4103A_EFR32BG12P_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P single edge output compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/wtimer/single_edge_output_compare/SimplicityStudio/BRD4161A_EFR32MG12P_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P single edge output compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/wtimer/single_edge_output_compare/SimplicityStudio/BRD4253A_EFR32FG12P_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single edge output compare" description="This project demonstrates single output compare using the WTIMER module. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The Compare value is set such that after 3 seconds, PC10 will be set high.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_edge_output_compare/iar/single_edge_output_compare.eww,../app/mcu_peripheral_examples/wtimer/single_edge_output_compare/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_edge_output_compare.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. WTIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/wtimer/single_output_compare_polled/SimplicityStudio/BRD4103A_EFR32BG12P_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. WTIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/wtimer/single_output_compare_polled/SimplicityStudio/BRD4161A_EFR32MG12P_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. WTIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/wtimer/single_output_compare_polled/SimplicityStudio/BRD4253A_EFR32FG12P_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single output compare polled" description="This project demonstrates polled output compare to implement a blocking delay. WTIMER0 is initialized for output compare on Compare/Capture channel 0, and the compare value is set such that after 3 seconds the CC0 interrupt flag will be set. The program waits for the interrupt flag, and then enables LED0.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_output_compare_polled/iar/single_output_compare_polled.eww,../app/mcu_peripheral_examples/wtimer/single_output_compare_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_output_compare_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P single pulse generation DMA" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER0 is initialized for output compare on Compare/Capture  channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The wtimer is configured in one-shot mode and an interrupt triggers after the first  compare to load the second, falling edge to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_DMA/iar/single_pulse_generation_DMA.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_DMA/SimplicityStudio/BRD4103A_EFR32BG12P_single_pulse_generation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P single pulse generation DMA" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER0 is initialized for output compare on Compare/Capture  channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The wtimer is configured in one-shot mode and an interrupt triggers after the first  compare to load the second, falling edge to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_DMA/iar/single_pulse_generation_DMA.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_DMA/SimplicityStudio/BRD4161A_EFR32MG12P_single_pulse_generation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P single pulse generation DMA" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER0 is initialized for output compare on Compare/Capture  channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The wtimer is configured in one-shot mode and an interrupt triggers after the first  compare to load the second, falling edge to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_DMA/iar/single_pulse_generation_DMA.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_DMA/SimplicityStudio/BRD4253A_EFR32FG12P_single_pulse_generation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single pulse generation DMA" description="This project demonstrates the generation of a single pulse using output compare and the LDMA. WTIMER0 is initialized for output compare on Compare/Capture  channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The wtimer is configured in one-shot mode and an interrupt triggers after the first  compare to load the second, falling edge to the CCV. The LDMA is configured to transfer a single word to the CCV register once the first compare event occurs. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_DMA/iar/single_pulse_generation_DMA.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_DMA/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_pulse_generation_DMA.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P single pulse generation interrupt" description="This project demonstrates the generation of a single pulse using output compare. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The wtimer is  configured in one-shot mode and an interrupt triggers after the first compare to load the second, falling edge to the CCV. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_interrupt/iar/single_pulse_generation_interrupt.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_interrupt/SimplicityStudio/BRD4103A_EFR32BG12P_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P single pulse generation interrupt" description="This project demonstrates the generation of a single pulse using output compare. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The wtimer is  configured in one-shot mode and an interrupt triggers after the first compare to load the second, falling edge to the CCV. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_interrupt/iar/single_pulse_generation_interrupt.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_interrupt/SimplicityStudio/BRD4161A_EFR32MG12P_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P single pulse generation interrupt" description="This project demonstrates the generation of a single pulse using output compare. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The wtimer is  configured in one-shot mode and an interrupt triggers after the first compare to load the second, falling edge to the CCV. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_interrupt/iar/single_pulse_generation_interrupt.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_interrupt/SimplicityStudio/BRD4253A_EFR32FG12P_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single pulse generation interrupt" description="This project demonstrates the generation of a single pulse using output compare. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The wtimer is  configured in one-shot mode and an interrupt triggers after the first compare to load the second, falling edge to the CCV. The values loaded into the CCV are such that a 1ms pulse is generated after a 3 second delay.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_interrupt/iar/single_pulse_generation_interrupt.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_interrupt/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_pulse_generation_interrupt.slsproj"/>
  </descriptors>
  <descriptors label="BRD4103A EFR32BG12P single pulse generation polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The buffered  compare values are set such that a single 1 pulse is generated.">
    <properties key="core.boardCompatibility" value="brd4103a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.bg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_polled/iar/single_pulse_generation_polled.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_polled/SimplicityStudio/BRD4103A_EFR32BG12P_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4161A EFR32MG12P single pulse generation polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The buffered  compare values are set such that a single 1 pulse is generated.">
    <properties key="core.boardCompatibility" value="brd4161a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.mg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_polled/iar/single_pulse_generation_polled.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_polled/SimplicityStudio/BRD4161A_EFR32MG12P_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="BRD4253A EFR32FG12P single pulse generation polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The buffered  compare values are set such that a single 1 pulse is generated.">
    <properties key="core.boardCompatibility" value="brd4253a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efr32.fg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_polled/iar/single_pulse_generation_polled.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_polled/SimplicityStudio/BRD4253A_EFR32FG12P_single_pulse_generation_polled.slsproj"/>
  </descriptors>
  <descriptors label="SLSTK3402A EFM32PG12B single pulse generation polled" description="This project demonstrates the generation of a single pulse signal using output compare. WTIMER0 is initialized for output compare on Compare/Capture channel 0 which is routed to GPIO Pin PC10 (Expansion Header Pin 16). The buffered  compare values are set such that a single 1 pulse is generated.">
    <properties key="core.boardCompatibility" value="brd2501a"/>
    <properties key="core.partCompatibility" value="mcu.arm.efm32.pg12.*"/>
    <properties key="template.category" value="wtimer"/>
    <properties key="template.initiallyOpenedResource" value="src/readme.txt"/>
    <properties key="template.projectFilePaths" value="../app/mcu_peripheral_examples/wtimer/single_pulse_generation_polled/iar/single_pulse_generation_polled.eww,../app/mcu_peripheral_examples/wtimer/single_pulse_generation_polled/SimplicityStudio/SLSTK3402A_EFM32PG12B_single_pulse_generation_polled.slsproj"/>
  </descriptors>
</model:MDescriptors>
